# Makefile for Episode 22: Industrial Protocols
# Wiegand & Modbus RTU

CC = gcc
CFLAGS = -Wall -Wextra -std=c11 -g
TARGET = industrial_protocols

# –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å
all: $(TARGET)

$(TARGET): starter.c
	$(CC) $(CFLAGS) -o $(TARGET) starter.c

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ –∏–º—è
protocols: $(TARGET)

# –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
run: $(TARGET)
	./$(TARGET)

# –û—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
test-wiegand: $(TARGET)
	./$(TARGET) --wiegand

test-modbus: $(TARGET)
	./$(TARGET) --modbus

test-rfid: $(TARGET)
	./$(TARGET) --rfid

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã
test: $(TARGET)
	@echo "üß™ Running Episode 22 tests..."
	@./tests/test.sh

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Ç–µ—á–∫–∏ –ø–∞–º—è—Ç–∏
memcheck: $(TARGET)
	@if command -v valgrind > /dev/null 2>&1; then \
		valgrind --leak-check=full --show-leak-kinds=all ./$(TARGET); \
	elif command -v leaks > /dev/null 2>&1; then \
		leaks --atExit -- ./$(TARGET); \
	else \
		echo "‚ö†Ô∏è  valgrind/leaks not found, skipping memory check"; \
	fi

# –û—á–∏—Å—Ç–∫–∞
clean:
	rm -f $(TARGET)
	rm -f test_cards.txt
	rm -f artifacts/*.o

# –°–ø—Ä–∞–≤–∫–∞
help:
	@echo "Episode 22: Industrial Protocols"
	@echo ""
	@echo "Targets:"
	@echo "  make           - Build program"
	@echo "  make run       - Run all tests"
	@echo "  make test      - Run automated tests"
	@echo "  make test-wiegand - Test Wiegand only"
	@echo "  make test-modbus  - Test Modbus only"
	@echo "  make test-rfid    - Test RFID emulator only"
	@echo "  make memcheck  - Check for memory leaks"
	@echo "  make clean     - Remove build artifacts"

.PHONY: all run test test-wiegand test-modbus test-rfid memcheck clean help protocols